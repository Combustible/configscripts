
if [[ -d "/etc/oh-my-zsh" ]]; then
	# Path to your oh-my-zsh installation.
	export ZSH="/etc/oh-my-zsh"

	# Set name of the theme to load. Optionally, if you set this to "random"
	# it'll load a random theme each time that oh-my-zsh is loaded.
	# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
	ZSH_THEME="evan"

	# Uncomment the following line to display red dots whilst waiting for completion.
	COMPLETION_WAITING_DOTS="true"

	# Uncomment the following line if you want to disable marking untracked files
	# under VCS as dirty. This makes repository status check for large repositories
	# much, much faster.
	DISABLE_UNTRACKED_FILES_DIRTY="true"

	# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
	# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
	# Example format: plugins=(rails git textmate ruby lighthouse)
	# Add wisely, as too many plugins slow down shell startup.
	plugins=(git safe-paste)

	source $ZSH/oh-my-zsh.sh
fi

################################## Special Key configuration #################################

autoload zkbd

# Keypad
# 0 . Enter
bindkey -s "^[Op" "0"
bindkey -s "^[Ol" "."
bindkey -s "^[OM" "^M"
# 1 2 3
bindkey -s "^[Oq" "1"
bindkey -s "^[Or" "2"
bindkey -s "^[Os" "3"
# 4 5 6
bindkey -s "^[Ot" "4"
bindkey -s "^[Ou" "5"
bindkey -s "^[Ov" "6"
# 7 8 9
bindkey -s "^[Ow" "7"
bindkey -s "^[Ox" "8"
bindkey -s "^[Oy" "9"
# + -  * /
bindkey -s "^[Ok" "+"
bindkey -s "^[Om" "-"
bindkey -s "^[Oj" "*"
bindkey -s "^[Oo" "/"

bindkey "\033[1~" beginning-of-line
bindkey "\033[4~" end-of-line

################################## User configuration #################################

if [[ -e $HOME/.cargo/env ]]; then
	source $HOME/.cargo/env
fi

export EDITOR='vim'

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000000
SAVEHIST=1000000

setopt INC_APPEND_HISTORY appendhistory extendedglob nomatch
unsetopt autocd beep notify
bindkey -e

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "" || eval "LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:';
export LS_COLORS"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Disable ZSH semantic autocompletion for the following commands:
### Android Debugger:
compdef -d adb

# User specific aliases and functions
alias ll='ls -hl'
alias la='ls -hal'
alias mv='mv -i'
alias cp='cp -i'
alias tree='tree --charset=X'
export LESS=FRSX
alias astylelinux='astyle --style=linux --indent=tab=8 --convert-tabs --indent-preprocessor --min-conditional-indent=3 --max-instatement-indent=40 --pad-oper --unpad-paren --pad-header --align-pointer=name --indent-namespaces --max-code-length=100'
alias astylejava='astyle --style=java --indent=tab=4 --convert-tabs --min-conditional-indent=3 --max-instatement-indent=40 --pad-oper --unpad-paren --pad-header --indent-namespaces --max-code-length=100 --add-brackets'
unset SSH_ASKPASS

export PATH="$HOME/bin:$PATH"

# No more awful control-s freeze
stty ixany
stty ixoff -ixon

# No more vi for you
alias vi=vim

# Strips trailing whitespace errors from the files specified as arguments
fixwhitespace() {
	for file in "$@"; do
		sed -i -e's|[ \t]*\([\r\n]*\)$|\1|g' "$file"
	done
}

# Builds a single cscope database in the current directory to index the files/directories provided as arguments.
# Probably the most common invocation is 'buildcscope .' to index the current directory and subdirectories.
buildcscope() (
	rm -f cscope.in.out cscope.po.out cscope.files cscope.out
	find "$@" -name "*.c" -o -name "*.h" -o -name "*.cpp" | while read line; do
		filename="$(readlink -f "$line")"
		if $(which unifdef > /dev/null); then
			mv -f "$filename" "${filename}_CSCOPETEMP" >&2
			unifdef -b "${filename}_CSCOPETEMP" -U__cplusplus > "$filename"
		fi
		echo $(readlink -f $line)
	done | sort | uniq > cscope.files && cscope -b -q -k

	if $(which unifdef > /dev/null); then
		find "$@" -name "*_CSCOPETEMP" | while read line; do
			filename="$(readlink -f "$line")"
			origfilename="$(echo "$filename" | sed 's|_CSCOPETEMP$||g' )";
			mv -f "$filename" "$origfilename"
		done
	fi
)

get_rust() {
	curl --proto '=https' --tlsv1.2 -sSf "https://sh.rustup.rs" -o /tmp/rustup.sh
	chmod +x /tmp/rustup.sh
	/tmp/rustup.sh -y
	source $HOME/.cargo/env
	rustup component add rls rust-analysis rust-src
}

# First run text
if [[ ! -e $HOME/.cache/devinitmarker ]] ; then
	mkdir -p $HOME/.cache
	touch $HOME/.cache/devinitmarker
	echo "################################################################################"
	echo "# Welcome to Byron's vim-ified docker development environment"
	echo "# If you'd like to install rust to your home directory, you can run 'get_rust'"
	echo "# This message only appears on first run, or if your user home directory is not"
	echo "# mounted / otherwise persistent"
	echo "################################################################################"
fi

